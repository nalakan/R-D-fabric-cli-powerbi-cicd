name: deploy
  

on:
  # Deploys to DEV on push to main branch
  push:
    branches:
      - main           
    paths:
      - '**/*.SemanticModel/**'
      - '**/*.Report/**'
      - '**/*.Notebook/**'
      - '**/*.Lakehouse/**'
      - '**/*.DataPipeline/**'
      - 'scripts/**'
  # Deploys to PRD every day (commented to save Actions minutes in Github)

  # schedule:
  #   - cron: "0 0 * * *"   # Every day at 00:00  
    
  workflow_dispatch:
    inputs:
      environment:
        type: choice        
        required: true
        default: 'dev'
        options: 
        - dev   
        - prd 
      workspace:
        type: string
        required: true
        default: 'SalesSense'
      capacity:
        type: string
        required: false
        default: ''
      admin_upns:
        type: string
        required: false
        default: ''
  
env:        
  # If its running on schedule deploys to PRD, otherwise goes to DEV
  environment: ${{ github.event.inputs.environment == '' && (github.event_name == 'schedule' && 'prd' || 'dev') || github.event.inputs.environment }}
  workspace: ${{ github.event.inputs.workspace == '' && 'SalesSense' || github.event.inputs.workspace }}
  capacity: ${{ github.event.inputs.capacity == '' && vars.FABRIC_CAPACITY || github.event.inputs.capacity }}
  admin_upns: ${{ github.event.inputs.admin_upns == '' && vars.FABRIC_ADMIN_UPNS || github.event.inputs.admin_upns }}  

jobs:

  deploy:    
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Fabric CLI
        run: |
          python -m pip install ms-fabric-cli

      - name: Run Deployment Script {Dev}        
        env:
          FABRIC_CLIENT_ID: ${{ secrets.FABRIC_CLIENT_ID }}
          FABRIC_CLIENT_SECRET: ${{ secrets.FABRIC_CLIENT_SECRET }}
          FABRIC_TENANT_ID: ${{ secrets.FABRIC_TENANT_ID }}          
        run: 
          python scripts/deploy-$environment.py --spn-auth --capacity $capacity --workspace $workspace --admin-upns $admin_upns
      
